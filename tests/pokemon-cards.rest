### Get all Pokémon cards
GET {{baseUrl}}/pokemon-cards

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetAllPokemonCards", function() {
    client.assert(response.body.length > 0, "There have been no cards retrieved!");
  });

 %}

### Get Pokémon card with ID 1
GET {{baseUrl}}/pokemon-cards/1

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonCardByID", function() {
    client.assert(response.body.cardID === 1, "Card with id 1 has been found!");
  });

 %}

### Get all Pokémon cards that have "Charizard" in the name
GET {{baseUrl}}/pokemon-cards?name=Pikachu

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonCardsByName", function() {
    client.assert(response.body[0].name === "Pikachu", "Pokemon found named Pikachu");
  });

 %}

### Get all Pokémon cards that have a starting amount of 15
GET {{baseUrl}}/pokemon-cards?starting-amount=15

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonsByStartingAmount", function() {
    client.assert(response.body[0].startingAmount === 15, "A card with startingAmount 15 has been found");
  });

 %}

### Get all Pokémon cards and filter on type for all Pokémon cards
GET {{baseUrl}}/pokemon-cards?type=pokemon

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsByPokemonType", function() {
    client.assert(response.body === "Return a list of cards by Pokemon type", "Test succeeded!");
  });

 %}

### Get all Pokémon cards and filter on type for all energy cards
GET {{baseUrl}}/pokemon-cards?type=energy

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsByEnergyType", function() {
    client.assert(response.body === "Return a list of cards by Energy type", "Test succeeded!");
  });

 %}

### Get all Pokémon cards and filter on type for all trainer cards
GET {{baseUrl}}/pokemon-cards?type=trainer

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsByTrainerType", function() {
    client.assert(response.body === "Return a list of cards by Trainer type", "Test succeeded!");
  });

 %}

### Get all Pokémon cards and filter on the common rarity
GET {{baseUrl}}/pokemon-cards?rarity=common

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsByCommonRarity", function() {
    client.assert(response.body === "Return a list of cards of common rarity", "Test succeeded!");
  });

 %}

### Get all Pokémon cards and filter on the uncommon rarity
GET {{baseUrl}}/pokemon-cards?rarity=uncommon

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsByUncommonRarity", function() {
    client.assert(response.body === "Return a list of cards of uncommon rarity", "Test succeeded!");
  });

 %}

### Get all Pokémon cards and filter on the rare rarity
GET {{baseUrl}}/pokemon-cards?rarity=rare

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsByRareRarity", function() {
    client.assert(response.body === "Return a list of cards of rare rarity", "Test succeeded!");
  });

 %}

### Get all Pokémon cards and filter on normal element
GET {{baseUrl}}/pokemon-cards?element=normal

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsByNormalElement", function() {
    client.assert(response.body === "Return a list of cards of normal element", "Test succeeded!");
  });

 %}

### Get all Pokémon cards and filter on fire element
GET {{baseUrl}}/pokemon-cards?element=fire

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsByFireElement", function() {
    client.assert(response.body === "Return a list of cards of fire element", "Test succeeded!");
  });

 %}

### Get all Pokémon cards and filter on water element
GET {{baseUrl}}/pokemon-cards?element=water

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsByWaterElement", function() {
    client.assert(response.body === "Return a list of cards of water element", "Test succeeded!");
  });

 %}

### Get all Pokémon cards and filter on grass element
GET {{baseUrl}}/pokemon-cards?grass=grass

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsByGrassElement", function() {
    client.assert(response.body === "Return a list of cards of grass element", "Test succeeded!");
  });

 %}

### Get all Pokémon cards and filter on electric element
GET {{baseUrl}}/pokemon-cards?electric=electric

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsByElectricElement", function() {
    client.assert(response.body === "Return a list of cards of electric element", "Test succeeded!");
  });

 %}

### Get all Pokémon cards and filter on weakness to normal elements
GET {{baseUrl}}/pokemon-cards?weakness=normal

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsWithNormalWeakness", function() {
    client.assert(response.body === "Return a list of cards with weakness to normal", "Test succeeded!");
  });

 %}

### Get all Pokémon cards and filter on weakness to fire elements
GET {{baseUrl}}/pokemon-cards?weakness=fire

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsWithFireWeakness", function() {
    client.assert(response.body === "Return a list of cards with weakness to fire", "Test succeeded!");
  });

 %}

### Get all Pokémon cards and filter on weakness to water elements
GET {{baseUrl}}/pokemon-cards?weakness=water

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsWithWaterWeakness", function() {
    client.assert(response.body === "Return a list of cards with weakness to water", "Test succeeded!");
  });

 %}

### Get all Pokémon cards and filter on weakness to grass elements
GET {{baseUrl}}/pokemon-cards?weakness=grass

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsWithGrassWeakness", function() {
    client.assert(response.body === "Return a list of cards with weakness to grass", "Test succeeded!");
  });

 %}

### Get all Pokémon cards and filter on weakness to electric elements
GET {{baseUrl}}/pokemon-cards?weakness=electric

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsWithElectricWeakness", function() {
    client.assert(response.body === "Return a list of cards with weakness to electric", "Test succeeded!");
  });

 %}

### Get all Pokémon cards and filter on resistance to normal elements
GET {{baseUrl}}/pokemon-cards?resistance=normal

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsWithNormalResistance", function() {
    client.assert(response.body === "Return a list of cards with resistance to normal", "Test succeeded!");
  });

 %}

### Get all Pokémon cards and filter on resistance to fire elements
GET {{baseUrl}}/pokemon-cards?resistance=fire

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsWithFireResistance", function() {
    client.assert(response.body === "Return a list of cards with resistance to fire", "Test succeeded!");
  });

 %}

### Get all Pokémon cards and filter on resistance to water elements
GET {{baseUrl}}/pokemon-cards?resistance=water

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsWithWaterResistance", function() {
    client.assert(response.body === "Return a list of cards with resistance to water", "Test succeeded!");
  });

 %}

### Get all Pokémon cards and filter on resistance to grass elements
GET {{baseUrl}}/pokemon-cards?resistance=grass

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsWithGrassResistance", function() {
    client.assert(response.body === "Return a list of cards with resistance to grass", "Test succeeded!");
  });

 %}

### Get all Pokémon cards and filter on resistance to electric elements
GET {{baseUrl}}/pokemon-cards?resistance=electric

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsWithElectricResistance", function() {
    client.assert(response.body === "Return a list of cards with resistance to electric", "Test succeeded!");
  });

 %}

###------------------------------------------------------------------------

### Adds a Pokémon card (auction)
POST {{baseUrl}}/pokemon-cards

> {%
  client.test("success", function() {
    client.assert(response.status !== 201, "Response status is not 201");
  });

  client.test("AddPokemonCard", function() {
    client.assert(response.body === "Return posted Pokemon Card", "Test succeeded!");
  });

 %}

###------------------------------------------------------------------------

### Modifies a Pokémon card (auction) with card id 1
PUT {{baseUrl}}/pokemon-cards/1

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("PutPokemonCardByID", function() {
    client.assert(response.body === "Return adjusted Pokemon Card", "Test succeeded!");
  });

 %}

###------------------------------------------------------------------------

### Deletes a Pokémon card (auction) with card id 1
DELETE {{baseUrl}}/pokemon-cards/1

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

 %}



