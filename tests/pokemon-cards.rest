### Get all Pokémon cards
GET {{baseUrl}}/pokemon-cards

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetAllPokemonCards", function() {
    client.assert(response.body.length > 0, "There have been no cards retrieved!");
  });

 %}

### Get Pokémon card with ID 1
GET {{baseUrl}}/pokemon-cards/1

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonCardByID", function() {
    client.assert(response.body.cardID === 1, "No card with id 1 has been retrieved!");
  });

 %}

### Get all Pokémon cards that have "Pikachu" in the name
GET {{baseUrl}}/pokemon-cards?name=Pikachu

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonCardsByName", function() {
    client.assert(response.body[0].name === "Pikachu", "No card found including 'Pikachu'");
  });

 %}

### Get all Pokémon cards that have a starting amount of 15
GET {{baseUrl}}/pokemon-cards?starting-amount=15

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonsByStartingAmount", function() {
    client.assert(response.body[0].startingAmount === 15, "A card with startingAmount 15 has been found");
  });

 %}

### Get all Pokémon cards and filter on type for all Pokémon cards
GET {{baseUrl}}/pokemon-cards?cardType=Pokemon

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonsByPokemonType", function() {
    client.assert(response.body[0].cardType === "Pokemon", "No Pokémon with card type Pokémon have been found");
  });

 %}

#### Get all Pokémon cards and filter on type for all energy cards
#GET {{baseUrl}}/pokemon-cards?type=energy
#
#> {%
#  client.test("success", function() {
#    client.assert(response.status === 200, "Response status is not 200");
#  });
#
#  client.test("GetPokemonsByEnergyType", function() {
#    client.assert(response.body[0].cardType === "Energy", "No Pokémon with card type Energy have been found");
#  });
#
# %}

#### Get all Pokémon cards and filter on type for all trainer cards
#GET {{baseUrl}}/pokemon-cards?type=trainer
#
#> {%
#  client.test("success", function() {
#    client.assert(response.status !== 200, "Response status is not 200");
#  });
#
#  client.test("GetPokemonsByTrainerType", function() {
#    client.assert(response.body === "Return a list of cards by Trainer type", "Test succeeded!");
#  });
#
# %}

### Get all Pokémon cards and filter on the common rarity
GET {{baseUrl}}/pokemon-cards?rarity=common

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonsByCommonRarity", function() {
    client.assert(response.body[0].rarity === "Common", "No cards with the rarity common have been found");
  });

 %}

### Get all Pokémon cards and filter on the uncommon rarity
GET {{baseUrl}}/pokemon-cards?rarity=uncommon

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonsByUncommonRarity", function() {
    client.assert(response.body[0].rarity === "Uncommon", "No cards with the rarity uncommon have been found");
  });

 %}

### Get all Pokémon cards and filter on the rare rarity
GET {{baseUrl}}/pokemon-cards?rarity=rare

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonsByRareRarity", function() {
    client.assert(response.body[0].rarity === "Rare", "No cards with the rarity rare have been found");
  });

 %}

### Get all Pokémon cards and filter on normal element
GET {{baseUrl}}/pokemon-cards?element=normal

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonsByNormalElement", function() {
    client.assert(response.body[0].element === "Normal", "No card with the element normal have been found");
  });

 %}

### Get all Pokémon cards and filter on fire element
GET {{baseUrl}}/pokemon-cards?element=fire

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonsByFireElement", function() {
    client.assert(response.body[0].element === "Fire", "No card with the element fire have been found");
  });

 %}

### Get all Pokémon cards and filter on water element
GET {{baseUrl}}/pokemon-cards?element=water

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonsByWaterElement", function() {
    client.assert(response.body[0].element === "Water", "No card with the element water have been found");
  });

 %}

### Get all Pokémon cards and filter on grass element
GET {{baseUrl}}/pokemon-cards?grass=grass

> {%
  client.test("success", function() {
    client.assert(response.status !== 200, "Response status is not 200");
  });

  client.test("GetPokemonsByGrassElement", function() {
    client.assert(response.body[0].element === "Grass", "No card with the element grass have been found");
  });

 %}

### Get all Pokémon cards and filter on electric element
GET {{baseUrl}}/pokemon-cards?electric=electric

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonsByElectricElement", function() {
    client.assert(response.body[0].element === "Electric", "No card with the electric normal have been found");
  });

 %}

### Get all Pokémon cards and filter on weakness to normal elements
GET {{baseUrl}}/pokemon-cards?weakness=normal

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonsWithNormalWeakness", function() {
    client.assert(response.body[0].weakness === "Normal", "No card with a weakness to normal have been found");
  });

 %}

### Get all Pokémon cards and filter on weakness to fire elements
GET {{baseUrl}}/pokemon-cards?weakness=fire

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonsWithFireWeakness", function() {
    client.assert(response.body[0].weakness === "Fire", "No card with a weakness to fire have been found");
  });

 %}

### Get all Pokémon cards and filter on weakness to water elements
GET {{baseUrl}}/pokemon-cards?weakness=water

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonsWithWaterWeakness", function() {
    client.assert(response.body[0].weakness === "Water", "No card with a weakness to water have been found");
  });

 %}

### Get all Pokémon cards and filter on weakness to grass elements
GET {{baseUrl}}/pokemon-cards?weakness=grass

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonsWithGrassWeakness", function() {
    client.assert(response.body[0].weakness === "Grass", "No card with a weakness to grass have been found");
  });

 %}

### Get all Pokémon cards and filter on weakness to electric elements
GET {{baseUrl}}/pokemon-cards?weakness=electric

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonsWithElectricWeakness", function() {
    client.assert(response.body[0].weakness === "Electric", "No card with a weakness to electric have been found");
  });

 %}

### Get all Pokémon cards and filter on resistance to normal elements
GET {{baseUrl}}/pokemon-cards?resistance=normal

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonsWithNormalResistance", function() {
    client.assert(response.body[0].resistance === "Normal", "No card with a resistance to normal have been found");
  });

 %}

### Get all Pokémon cards and filter on resistance to fire elements
GET {{baseUrl}}/pokemon-cards?resistance=fire

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonsWithFireResistance", function() {
    client.assert(response.body[0].resistance === "Fire", "No card with a resistance to fire have been found");
  });

 %}

### Get all Pokémon cards and filter on resistance to water elements
GET {{baseUrl}}/pokemon-cards?resistance=water

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonsWithWaterResistance", function() {
    client.assert(response.body[0].resistance === "Water", "No card with a resistance to water have been found");
  });

 %}

### Get all Pokémon cards and filter on resistance to grass elements
GET {{baseUrl}}/pokemon-cards?resistance=grass

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonsWithGrassResistance", function() {
    client.assert(response.body[0].resistance === "Grass", "No card with a resistance to grass have been found");
  });

 %}

### Get all Pokémon cards and filter on resistance to electric elements
GET {{baseUrl}}/pokemon-cards?resistance=electric

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("GetPokemonsWithElectricResistance", function() {
    client.assert(response.body[0].resistance === "Electric", "No card with a resistance to electric have been found");
  });

 %}

###------------------------------------------------------------------------

### Adds a Pokémon card (auction)
POST {{baseUrl}}/pokemon-cards
Content-Type: application/json

{
  "userID": 1,
  "name": "Psyduck",
  "startingAmount": 65,
  "imageURL": "https://assets.pokemon.com/assets/cms2/img/pokedex/full/054.png",
  "availabilityDate": "10-9-2021",
  "cardType": "Pokemon",
  "rarity": "Normal",
  "element": "Water",
  "weakness": "Electric",
  "resistance": "Fire"
}

> {%
  client.test("success", function() {
    client.assert(response.status === 201, "Response status is not 201");
  });

  client.test("AddPokemonCard", function() {
    client.assert(response.body.name === "Psyduck", "Test succeeded!");
  });

 %}

###------------------------------------------------------------------------

### Modifies a Pokémon card (auction) with card id 5
PUT {{baseUrl}}/pokemon-cards/5
Content-Type: application/json

{
  "cardID": 5,
  "userID": 1,
  "name": "Psyduck",
  "startingAmount": 85,
  "imageURL": "https://assets.pokemon.com/assets/cms2/img/pokedex/full/054.png",
  "availabilityDate": "10-9-2021",
  "cardType": "Pokemon",
  "rarity": "Normal",
  "element": "Water",
  "weakness": "Electric",
  "resistance": "Fire",
  "bids" : []
}

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });

  client.test("AddPokemonCard", function() {
    client.assert(response.body.startingAmount === 85, "Test succeeded!");
  });

 %}

###------------------------------------------------------------------------

### Deletes a Pokémon card (auction) with card id 5
DELETE {{baseUrl}}/pokemon-cards/5

> {%
  client.test("success", function() {
    client.assert(response.status === 204, "Response status is not 204");
  });

 %}

### Check if deleted card with ID 5 is actually deleted
GET {{baseUrl}}/pokemon-cards/5

> {%
  client.test("success", function() {
    client.assert(response.status === 404, "Response status is not 404");
  });

 %}


